<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>children</key>
			<array>
				<dict>
					<key>destination</key>
					<dict>
						<key>location-parameters</key>
						<dict>
							<key>EndingColumnNumber</key>
							<string>0</string>
							<key>EndingLineNumber</key>
							<string>13</string>
							<key>StartingColumnNumber</key>
							<string>0</string>
							<key>StartingLineNumber</key>
							<string>12</string>
							<key>Timestamp</key>
							<string>738717119.285651</string>
						</dict>
						<key>rebasable-url</key>
						<dict>
							<key>base</key>
							<string>workspace</string>
							<key>payload</key>
							<dict>
								<key>relative-path</key>
								<string>GHFollowers/GFAlertVC.swift</string>
							</dict>
						</dict>
					</dict>
					<key>text-context</key>
					<dict>
						<key>focused</key>
						<string>    let containerView = GFAlertContainerView()
</string>
						<key>leading</key>
						<string>    
    
</string>
						<key>trailing</key>
						<string>    let titleLabel    = GFTitleLabel(textAlignment: .center, fontSize: 20)
    let messageLabel  = GFBodyLabel(textAlignment: .center)
    let actionButton  = GFButton(backgroundColor: .systemPink, title: "ok")
</string>
					</dict>
					<key>title</key>
					<string>create re-usable alert container UIView</string>
					<key>type</key>
					<string>bookmark</string>
				</dict>
				<dict>
					<key>destination</key>
					<dict>
						<key>location-parameters</key>
						<dict>
							<key>EndingColumnNumber</key>
							<string>0</string>
							<key>EndingLineNumber</key>
							<string>37</string>
							<key>StartingColumnNumber</key>
							<string>0</string>
							<key>StartingLineNumber</key>
							<string>36</string>
							<key>Timestamp</key>
							<string>738624343.517473</string>
						</dict>
						<key>rebasable-url</key>
						<dict>
							<key>base</key>
							<string>workspace</string>
							<key>payload</key>
							<dict>
								<key>relative-path</key>
								<string>GHFollowers/Controllers/SearchVC.swift</string>
							</dict>
						</dict>
					</dict>
					<key>text-context</key>
					<dict>
						<key>focused</key>
						<string>    func createDismissKeyboardTapGesture() {
</string>
						<key>leading</key>
						<string>    //MARK: FUNCTIONS
    
</string>
						<key>trailing</key>
						<string>        let tap = UITapGestureRecognizer(target: self.view, action: #selector(UIView.endEditing(_:)))
        view.addGestureRecognizer(tap)
    }
</string>
					</dict>
					<key>type</key>
					<string>bookmark</string>
				</dict>
			</array>
			<key>title</key>
			<string>for review</string>
			<key>type</key>
			<string>group</string>
		</dict>
		<dict>
			<key>children</key>
			<array>
				<dict>
					<key>destination</key>
					<dict>
						<key>location-parameters</key>
						<dict>
							<key>EndingColumnNumber</key>
							<string>0</string>
							<key>EndingLineNumber</key>
							<string>57</string>
							<key>StartingColumnNumber</key>
							<string>0</string>
							<key>StartingLineNumber</key>
							<string>56</string>
							<key>Timestamp</key>
							<string>739745469.688068</string>
						</dict>
						<key>rebasable-url</key>
						<dict>
							<key>base</key>
							<string>workspace</string>
							<key>payload</key>
							<dict>
								<key>relative-path</key>
								<string>GHFollowers/Screens/FollowerListVC.swift</string>
							</dict>
						</dict>
					</dict>
					<key>text-context</key>
					<dict>
						<key>focused</key>
						<string>    func configureSearchController() {
</string>
						<key>leading</key>
						<string>    
    
</string>
						<key>trailing</key>
						<string>        let mySearchController                                  = UISearchController()
        mySearchController.searchResultsUpdater                 = self
        mySearchController.searchBar.delegate                   = self
</string>
					</dict>
					<key>title</key>
					<string>make a search bar</string>
					<key>type</key>
					<string>bookmark</string>
				</dict>
				<dict>
					<key>destination</key>
					<dict>
						<key>location-parameters</key>
						<dict>
							<key>EndingColumnNumber</key>
							<string>0</string>
							<key>EndingLineNumber</key>
							<string>151</string>
							<key>StartingColumnNumber</key>
							<string>0</string>
							<key>StartingLineNumber</key>
							<string>150</string>
							<key>Timestamp</key>
							<string>739747777.017665</string>
						</dict>
						<key>rebasable-url</key>
						<dict>
							<key>base</key>
							<string>workspace</string>
							<key>payload</key>
							<dict>
								<key>relative-path</key>
								<string>GHFollowers/Screens/FollowerListVC.swift</string>
							</dict>
						</dict>
					</dict>
					<key>text-context</key>
					<dict>
						<key>focused</key>
						<string>        guard let filter = searchController.searchBar.text, !filter.isEmpty else { return }
</string>
						<key>leading</key>
						<string>    
    func updateSearchResults(for searchController: UISearchController) {
</string>
						<key>trailing</key>
						<string>        
        isSearching = true
        filteredFollowers = followers.filter { $0.login.lowercased().contains(filter.lowercased()) }
</string>
					</dict>
					<key>title</key>
					<string>using commas in vars (both must pass)</string>
					<key>type</key>
					<string>bookmark</string>
				</dict>
				<dict>
					<key>destination</key>
					<dict>
						<key>location-parameters</key>
						<dict>
							<key>EndingColumnNumber</key>
							<string>0</string>
							<key>EndingLineNumber</key>
							<string>18</string>
							<key>StartingColumnNumber</key>
							<string>0</string>
							<key>StartingLineNumber</key>
							<string>17</string>
							<key>Timestamp</key>
							<string>739900011.918251</string>
						</dict>
						<key>rebasable-url</key>
						<dict>
							<key>base</key>
							<string>workspace</string>
							<key>payload</key>
							<dict>
								<key>relative-path</key>
								<string>GHFollowers/Models/Follower.swift</string>
							</dict>
						</dict>
					</dict>
					<key>text-context</key>
					<dict>
						<key>focused</key>
						<string>    func hash(into hasher: inout Hasher) {
</string>
						<key>leading</key>
						<string>    
    //this hasher turns the login into a UUID for the diffable datasource
</string>
						<key>trailing</key>
						<string>        hasher.combine(login)
    }
}
</string>
					</dict>
					<key>title</key>
					<string>diffable datasource hasher / login gets turned into UUID </string>
					<key>type</key>
					<string>bookmark</string>
				</dict>
			</array>
			<key>title</key>
			<string>for reference</string>
			<key>type</key>
			<string>group</string>
		</dict>
	</array>
</dict>
</plist>
